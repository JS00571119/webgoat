name: "WebGoat - CodeQL Multi-level Scan"

on: 
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:

  run-default-level:
    name: Default CodeQL Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' , 'javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
      if: matrix.language == 'java'
      
    - run: |
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
 
    - run: |
       ./delombok.sh
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1  
    
  download-default-level:
    runs-on: ubuntu-latest
    needs: run-default-level
    steps:

    - uses: amitgupta7/ghas-reports-action@main
      with:
        token: ${{ secrets.ORG_PAT }}

    - uses: actions/upload-artifact@v2
      with:
        name: results-default
        path: alerts.xlsx
    
  run-level1:
    name: CodeQL Scan Level 1
    needs: [run-default-level, download-default-level]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' , 'javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
      if: matrix.language == 'java'
      
    - run: |
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        queries: security-extended
 
    - run: |
       ./delombok.sh
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
  download-level1:
    runs-on: ubuntu-latest
    needs: run-level1
    steps:

    - uses: amitgupta7/ghas-reports-action@main
      with:
        token: ${{ secrets.ORG_PAT }}

    - uses: actions/upload-artifact@v2
      with:
        name: results-level1
        path: alerts.xlsx

  run-level2:
    name: CodeQL Scan Level 2
    needs: [run-level1, download-level1]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' , 'javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
      if: matrix.language == 'java'
      
    - run: |
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        queries: security-and-quality
 
    - run: |
       ./delombok.sh
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
  download-level2:
    runs-on: ubuntu-latest
    needs: run-level2
    steps:

    - uses: amitgupta7/ghas-reports-action@main
      with:
        token: ${{ secrets.ORG_PAT }}

    - uses: actions/upload-artifact@v2
      with:
        name: results-level2
        path: alerts.xlsx

  run-level3:
    name: CodeQL Scan Level 3
    needs: [run-level2, download-level2]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' , 'javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
      if: matrix.language == 'java'
      
    - run: |
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        tools: https://github.com/amitgupta7/demo-codeql-bundle/releases/download/codeql-bundle-20220214-60d0cbc/codeql-bundle.tar.gz
        queries: security-extended
 
    - run: |
       ./delombok.sh
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
  download-level3:
    runs-on: ubuntu-latest
    needs: run-level3
    steps:

    - uses: amitgupta7/ghas-reports-action@main
      with:
        token: ${{ secrets.ORG_PAT }}

    - uses: actions/upload-artifact@v2
      with:
        name: results-level3
        path: alerts.xlsx
  
  run-level4:
    name: CodeQL Scan Level 5
    needs: [run-level3, download-level3]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' , 'javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
      if: matrix.language == 'java'
      
    - run: |
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        tools: https://github.com/amitgupta7/demo-codeql-bundle/releases/download/codeql-bundle-20220214-60d0cbc/codeql-bundle.tar.gz
    - run: |
       ./delombok.sh
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
  download-level4:
    runs-on: ubuntu-latest
    needs: run-level4
    steps:

    - uses: amitgupta7/ghas-reports-action@main
      with:
        token: ${{ secrets.ORG_PAT }}

    - uses: actions/upload-artifact@v2
      with:
        name: results-level4
        path: alerts.xlsx

  run-level5:
    name: CodeQL Scan Level 5
    needs: [run-level4, download-level4]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' , 'javascript']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: '17'
        java-package: jdk
        architecture: x64
      if: matrix.language == 'java'
      
    - run: |
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        tools: https://github.com/amitgupta7/demo-codeql-bundle/releases/download/codeql-bundle-20220214-60d0cbc/codeql-bundle.tar.gz
        queries: security-and-quality
    - run: |
       ./delombok.sh
       mvn clean install -DskipTests
      if: matrix.language == 'java'
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
  download-level5:
    runs-on: ubuntu-latest
    needs: run-level5
    steps:

    - uses: amitgupta7/ghas-reports-action@main
      with:
        token: ${{ secrets.ORG_PAT }}

    - uses: actions/upload-artifact@v2
      with:
        name: results-level5
        path: alerts.xlsx
  
